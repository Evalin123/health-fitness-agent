/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream, CronHandler } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  interface Handlers {
    'user-activity-extract': EventHandler<{ userId: string; message: string; replyToken: string }, { topic: 'send-line-message-request'; data: { userId: string; message: string; replyToken: string } }>
    'StateAuditJob': CronHandler<{ topic: 'notification'; data: { templateId: string; email: string; templateData: Record<string, unknown> } }>
    'send-line-message': EventHandler<{ userId: string; message: string; replyToken: string }, never>
    'ProcessFoodOrder': EventHandler<{ email: string; quantity: number; petId: number }, { topic: 'notification'; data: { templateId: string; email: string; templateData: Record<string, unknown> } }>
    'planner': EventHandler<{ userId: string; intent: 'plan_meal' | 'plan_workout'; message: string; replyToken: string }, { topic: 'send-line-message-request'; data: { userId: string; message: string; replyToken: string } }>
    'Notification': EventHandler<{ templateId: string; email: string; templateData: Record<string, unknown> }, never>
    'line-inbound-handler': ApiRouteHandler<{ destination: string; events: { type: string; mode?: string; timestamp: number; source: { type: 'user' | 'group' | 'room'; userId?: string; groupId?: string; roomId?: string }; message: unknown; replyToken: string }[] }, unknown, { topic: 'message-received'; data: { userId: string; sourceType: string; messageType: string; replyToken: string; timestamp: number; text?: string; imageId?: string } }>
    'line-webhook-verify': ApiRouteHandler<Record<string, unknown>, unknown, never>
    'health-chat': EventHandler<{ userId: string; message: string; replyToken: string }, { topic: 'send-line-message-request'; data: { userId: string; message: string; replyToken: string } }>
    'ApiTrigger': ApiRouteHandler<{ pet: { name: string; photoUrl: string }; foodOrder?: { id: string; quantity: number } }, ApiResponse<200, { id: number; name: string; photoUrl: string }>, { topic: 'process-food-order'; data: { email: string; quantity: number; petId: number } }>
    'classify-user-intent': EventHandler<{ userId: string; sourceType: string; messageType: string; replyToken: string; timestamp: number; text?: string; imageId?: string }, { topic: 'planner-request'; data: { userId: string; intent: 'plan_meal' | 'plan_workout'; message: string; replyToken: string } } | { topic: 'user-activity-extract'; data: { userId: string; message: string; replyToken: string } } | { topic: 'analyze-user-habits'; data: { userId: string; replyToken: string } } | { topic: 'health-chat-message'; data: { userId: string; message: string; replyToken: string } }>
    'analyzer': EventHandler<{ userId: string; replyToken: string }, { topic: 'send-line-message-request'; data: { userId: string; message: string; replyToken: string } }>
  }
}